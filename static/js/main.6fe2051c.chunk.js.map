{"version":3,"sources":["App/Pokemon.jsx","App/Pagination.jsx","App/Filter.jsx","App/Page.jsx","Store/storage.jsx","index.js"],"names":["Pokemon","inject","observer","getManyPokemons","count","clickedPage","console","log","Pokemons","i","props","Store","getPokemon","convertToBlock","many_pokemons","Div","map","item","index","push","className","onClick","modalWindow","countPokemonOnPage","src","alt","change_clickedPokemon","document","getElementById","style","display","pokemonsOnPage","this","pokemon","clickedPokemon","id","base_stat","type","name","undefined","React","Component","Pagination","getAllPages","allPages","changefunction","value","change_clickedPage","convertToNormalView","many_pages","normalView","click","length","j","pagination1","Filter","checks","types","typesOfPokemons","div","for","filterPokemons","checked","filter","tempPokemons","allPokemons","tempPoke","isCorrect","tempType","f","filtredType","change_allPokemons","temp","change_countPokemonOnPage","check","Page","changeValue","size","target","sortPokemons","pokemons","sort","sortFunction","a","b","refresheAll","get_allpokemons","onChange","selectedPokemon","requestRoot","new_","new_count","num","localStorage","JSON","parse","getItem","request","fetch","cache","then","response","json","data","speciesRequest","species","url","sprites","stats","weight","template","setItem","stringify","splice","decorate","observable","action","change_selectedPokemon","addValuesToFilter","refreshFilter","stor","ReactDOM","render"],"mappings":"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","file":"static/js/main.6fe2051c.chunk.js","sourcesContent":["import React from 'react';\r\nimport {inject, observer} from 'mobx-react';\r\nimport '../Style/Pokemon.css';\r\n\r\nlet Pokemon = inject('Store')(\r\n    observer(\r\n        class PokeObject extends React.Component{\r\n            componentWillMount(){\r\n                \r\n            }\r\n            getManyPokemons = (count, clickedPage) =>{\r\n                console.log(clickedPage-1);\r\n                let Pokemons = [];\r\n                for(let i = 1; i <= count; i++){\r\n                    Pokemons[i] = this.props.Store.getPokemon((((clickedPage-1)*count) + i-1));\r\n                }\r\n                return Pokemons;\r\n            }\r\n            convertToBlock = (many_pokemons) => {\r\n                let Div = [];\r\n                many_pokemons.map((item, index) => {\r\n                    Div.push(<div className = 'pokemon' onClick = {()=>this.modalWindow((this.props.Store.clickedPage-1)*this.props.Store.countPokemonOnPage + index)}>\r\n                        <img src={item[0]} alt ='this is mean pokemon image'/><br/>\r\n                        <p>{item[1]}</p>\r\n                    </div>);\r\n                })\r\n                return Div;\r\n            }\r\n            modalWindow = (index) =>{\r\n                console.log(index);\r\n                this.props.Store.change_clickedPokemon(index);\r\n                document.getElementById('modalElem').style.display = 'block';\r\n            }\r\n            render(){\r\n                let pokemonsOnPage = this.convertToBlock(this.getManyPokemons(this.props.Store.countPokemonOnPage, this.props.Store.clickedPage));\r\n                let pokemon = this.props.Store.getPokemon(this.props.Store.clickedPokemon-1);                \r\n                return(\r\n                    <div>\r\n                        <div className='modalWindow modal' id = 'modalElem'>\r\n                            <div id=\"close-block\" onClick={()=>{document.getElementById('modalElem').style.display='none'}}>\r\n                                <span id=\"x\">X</span>\r\n                            </div>\r\n                            <div className='grid-container'>\r\n                                <div className='nameOfPokemon'>{pokemon[1]}</div>\r\n                                <div className='photo'><img src={pokemon[0]}/></div>\r\n                                <div className='stat'>Stat</div>\r\n                                <div className='speed'>Speed: {pokemon[2][0].base_stat}</div>\r\n                                <div className='specialStats'>Special defense: {pokemon[2][1].base_stat}<br/>Special attack: {pokemon[2][2].base_stat}</div>\r\n                                <div className='defenseAttack'>Defense: {pokemon[2][3].base_stat}<br/>Attack: {pokemon[2][4].base_stat}</div>\r\n                                <div className='hp'>HP: {pokemon[2][5].base_stat}</div>\r\n                                <div className='type1 typeOfPokemon' id={pokemon[3][0].type.name}>{pokemon[3][0].type.name}</div>\r\n                                <div className='type2 typeOfPokemon' id = {(pokemon[3][1]===undefined)?'':pokemon[3][1].type.name}>{(pokemon[3][1]===undefined)?'':pokemon[3][1].type.name}</div>\r\n                                <div className='type3 typeOfPokemon' id={(pokemon[3][2]===undefined)?'':pokemon[3][2].type.name}>{(pokemon[3][2]===undefined)?'':pokemon[3][2].type.name}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className = 'pokemon-list'>{pokemonsOnPage}</div>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n    )\r\n)\r\n\r\nexport default Pokemon;","import React from 'react';\r\nimport {inject, observer} from 'mobx-react';\r\nimport '../Style/Pagination.css';\r\n\r\nlet Pagination = inject('Store')(\r\n    observer(\r\n        class Pagination extends React.Component{\r\n            getAllPages = () =>{\r\n                let allPages = [];\r\n                for(let i = 1; i <= 800 / this.props.Store.countPokemonOnPage; i++){\r\n                    allPages[i] = <div className='pagination-value' id={i} onClick =  {()=>this.changefunction(i)}>{i}</div>;\r\n                }\r\n                return allPages;\r\n            }\r\n            changefunction = (value) =>{\r\n                console.log(value);\r\n                this.props.Store.change_clickedPage(value);\r\n            }\r\n            convertToNormalView = (many_pages) =>{\r\n                let normalView = [];\r\n                let click = this.props.Store.clickedPage;\r\n                if(click < 6){\r\n                    for(let i = 1; i<=7; i++){\r\n                        normalView[i] = many_pages[i];\r\n                    }\r\n                    normalView[8] = <div className = 'dots'>...</div>\r\n                    normalView[9] = many_pages[many_pages.length-1];\r\n                    normalView[click] = <div className='pagination-value clicked-page' id={click} onClick =  {()=>this.changefunction(click)}>{click}</div>\r\n                }\r\n                else if(click > many_pages.length-4){\r\n                    normalView[1] = many_pages[1];\r\n                    normalView[2] = <div className = 'dots'>...</div>\r\n                    for(let i = 3, j = many_pages.length - 7; i<=9; i++, j++){\r\n                        normalView[i] = many_pages[j];\r\n                    }\r\n                    normalView[9-((many_pages.length-1) - click)] = <div className='pagination-value clicked-page' id={click} onClick =  {()=>this.changefunction(click)}>{click}</div>\r\n                }\r\n                else{\r\n                    normalView[1] = many_pages[1];\r\n                    normalView[2] = <div className = 'dots'>...</div>\r\n                    for(let i = 3, j = this.props.Store.clickedPage-2; i<=7; i++, j++){\r\n                        normalView[i] = many_pages[j];\r\n                    }\r\n                    normalView[8] = <div className = 'dots'>...</div>\r\n                    normalView[9] = many_pages[many_pages.length-1];\r\n                    normalView[5] = <div className='pagination-value clicked-page' id={click} onClick =  {()=>this.changefunction(click)}>{click}</div>\r\n                }\r\n                return normalView;\r\n            }\r\n            render(){\r\n                let pagination1 = this.convertToNormalView(this.getAllPages());\r\n                return(\r\n                    <div className='pagination-main'>{pagination1}</div>\r\n                );\r\n            }\r\n        }\r\n    )\r\n)\r\n\r\nexport default Pagination;","import React from 'react';\r\nimport {inject, observer} from 'mobx-react';\r\n\r\nimport '../Style/Filter.css';\r\n\r\nlet Filter = inject('Store')(\r\n    observer(\r\n        class FilterButton extends React.Component{\r\n            checks=()=>{\r\n                let types = this.props.Store.typesOfPokemons;\r\n                let div = [];\r\n                for(let i = 0; i<types.length; i++){\r\n                    div[i] = <div>\r\n                        <input type=\"checkbox\" value={types[i]} id={types[i]} className = 'pokemon-type-checkbox'/>\r\n                        <label for={types[i]}>{types[i]}</label> \r\n\r\n                    </div>\r\n                }\r\n                return div;\r\n            }\r\n\r\n            filterPokemons=()=>{\r\n                let types = this.props.Store.typesOfPokemons;\r\n                for(let i = 0; i<types.length; i++){\r\n                    if(document.getElementById(types[i]).checked === true){\r\n                        this.props.Store.filter[this.props.Store.filter.length] = types[i];\r\n                        console.log(types[i]);\r\n                    }\r\n                }\r\n                document.getElementById('filter').style.display='none';\r\n\r\n                let tempPokemons = [];\r\n                for(let i = 0; i<this.props.Store.allPokemons.length; i++){\r\n                    // console.log(\"inFor\");\r\n                    let tempPoke = this.props.Store.allPokemons[i];\r\n                    let isCorrect = false;\r\n                    // console.log(tempPoke);\r\n                    for(let j = 0; j<tempPoke[3].length; j++){\r\n                        let tempType = tempPoke[3][j].type.name;\r\n                        for(let f = 0; f<this.props.Store.filter.length; f++){\r\n                            let filtredType = this.props.Store.filter[f];\r\n                            console.log(tempType+\"/\"+filtredType);\r\n                            if(tempType === filtredType){\r\n                                isCorrect = true;\r\n                            }\r\n                        }\r\n                    }\r\n                    if(isCorrect === true){\r\n                        tempPokemons.push(tempPoke);\r\n                    }\r\n                }\r\n                this.props.Store.change_allPokemons(tempPokemons);\r\n                let temp = this.props.Store.countPokemonOnPage;\r\n                this.props.Store.change_countPokemonOnPage(20);\r\n                this.props.Store.change_countPokemonOnPage(temp);\r\n            }\r\n            render(){\r\n                let check = this.checks();\r\n                return(\r\n                    <div className = 'filter-block'>\r\n                        <div className='modal-filter-window' id='filter'>\r\n                            <div id=\"close-block\" onClick={()=>{document.getElementById('filter').style.display='none'}}>\r\n                                <span id=\"x\">X</span>\r\n                            </div>\r\n                            <div className='many-checks'>\r\n                                {check}\r\n                            </div> \r\n                            <div className = 'filter-buttons'>\r\n                                <div className = 'button search' onClick={this.filterPokemons}>Search</div>\r\n                                <div className = 'button cancel' onClick={()=>{document.getElementById('filter').style.display='none'}}>Cancel</div>\r\n                            </div>\r\n                        </div>   \r\n                        <div className='filter' onClick = {()=>{document.getElementById('filter').style.display='block'}}>Filter</div>             \r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n    )\r\n)\r\n\r\nexport default Filter;","import React from 'react';\r\nimport {inject, observer} from 'mobx-react';\r\n\r\nimport PokemonFile from './Pokemon';\r\nimport Pagination from './Pagination';\r\nimport Filter from './Filter';\r\n\r\nimport '../Style/Page.css';\r\n\r\nlet Page = inject('Store')(\r\n    observer(\r\n        class FullPage extends React.Component{\r\n            changeValue = (size) =>{\r\n                this.props.Store.change_countPokemonOnPage(size.target.value);\r\n                this.props.Store.change_clickedPage(1);\r\n            }\r\n            sortPokemons = () =>{\r\n                let pokemons = this.props.Store.allPokemons;\r\n                console.log(pokemons);\r\n                pokemons = pokemons.sort(this.sortFunction);\r\n                this.props.Store.change_allPokemons(pokemons);\r\n                console.log(pokemons);\r\n                let temp = this.props.Store.countPokemonOnPage;\r\n                this.props.Store.change_countPokemonOnPage(20);\r\n                this.props.Store.change_countPokemonOnPage(temp);\r\n            }\r\n            sortFunction = (a, b) =>{\r\n                if(a[1]>b[1]){\r\n                    return 1;\r\n                }\r\n                else if (a[1]<b[1]){\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            }\r\n            refresheAll = () =>{\r\n                this.props.Store.get_allpokemons();\r\n                let temp = this.props.Store.countPokemonOnPage;\r\n                let types = this.props.Store.typesOfPokemons;\r\n                for(let i = 0; i<types.length; i++){\r\n                    document.getElementById(types[i]).checked = false;\r\n                }\r\n                this.props.Store.change_countPokemonOnPage(20);\r\n                this.props.Store.change_countPokemonOnPage(temp);\r\n            }\r\n            render(){\r\n                return(\r\n                    <div className = 'page-elements'>\r\n                        <h1 className='page-name'>Pokedex</h1>\r\n                        <select className='size-box' onChange = {this.changeValue}>\r\n                            <option value=\"10\">10</option>\r\n                            <option value=\"20\">20</option>\r\n                            <option value=\"50\">50</option>\r\n                        </select>\r\n                        <div className = 'buttons'>\r\n                            <div className='sort' onClick = {this.sortPokemons}>Sort elements</div>\r\n                            <div className='refresh' onClick={this.refresheAll}>Refresh</div>\r\n                            <Filter />\r\n                        </div>\r\n                        <PokemonFile />\r\n                        <Pagination />\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n    )\r\n)\r\n\r\nexport default Page;","import { decorate, observable, action} from \"mobx\";\r\n\r\nclass Store{\r\n    allPokemons = [];\r\n    selectedPokemon = [];\r\n    countPokemonOnPage = 10;\r\n    clickedPage = 1;\r\n    clickedPokemon = 1;\r\n    typesOfPokemons = ['bug', 'dark', 'dragon', 'electric', 'fairy', 'fighting', 'fire', 'flying', 'ghosts',\r\n    'grass', 'ground', 'ice', 'normal', 'poison', 'psyhic', 'rock', 'steel', 'water']\r\n    filter = [];\r\n\r\n    requestRoot = \"https://pokeapi.co/api/v2/pokemon/\";\r\n\r\n    change_allPokemons(new_){\r\n        this.allPokemons = new_;\r\n    }\r\n    change_selectedPokemon(pokemon){\r\n        this.selectedPokemon = pokemon;\r\n    }\r\n    change_countPokemonOnPage(new_count){\r\n        this.countPokemonOnPage = new_count;\r\n    }\r\n    change_clickedPage(num){\r\n        this.clickedPage = num;\r\n    }\r\n    change_clickedPokemon(index){\r\n        this.clickedPokemon = index;\r\n    }\r\n\r\n    get_allpokemons(){\r\n        if('POKEMONS' in localStorage){\r\n            this.allPokemons = JSON.parse(localStorage.getItem('POKEMONS'));\r\n        }\r\n        else{\r\n            for(let i = 1; i<=800; i++){\r\n                const request = `${this.requestRoot}${i}/`;\r\n                fetch(request, {\r\n                    cache: \"force-cache\"\r\n                })\r\n                    .then(response => response.json())\r\n                    .then(data => {\r\n                        const speciesRequest = data.species.url;\r\n                        let temp = [];\r\n                        temp.push(data.sprites['front_default'], data.name, data.stats, data.types, data.weight);\r\n                        let template = [];\r\n                        if ('POKEMONS' in localStorage) {\r\n                            console.log('way 1');\r\n                            template = JSON.parse(localStorage.getItem('POKEMONS'));\r\n                            template.push(temp);\r\n                        }\r\n                        else {\r\n                            console.log('way 2');\r\n                            template[0] = temp;\r\n                        }\r\n                        localStorage.setItem('POKEMONS', JSON.stringify(template));\r\n                        return fetch(speciesRequest);\r\n                    })\r\n            }\r\n            this.allPokemons = JSON.parse(localStorage.getItem('POKEMONS'));\r\n        }\r\n    }\r\n    getPokemon(num){\r\n        if(this.allPokemons.length === 0){\r\n            this.get_allpokemons();\r\n        }\r\n        return this.allPokemons[num];\r\n    }\r\n\r\n    addValuesToFilter(value){\r\n        this.filter.push(value);\r\n    }\r\n    refreshFilter(){\r\n        this.filter = [];\r\n    }\r\n    removeValuesFromFilter(value){\r\n        for( var i = 0; i < this.filter.length; i++){ \r\n            if ( this.filter[i] === 5) {\r\n              this.filter.splice(i, 1); \r\n            }\r\n         }\r\n    }\r\n}\r\n\r\ndecorate(Store, {\r\n    allPokemons: observable,\r\n    selectedPokemon: observable,\r\n    countPokemonOnPage: observable,\r\n    clickedPage: observable,\r\n    clickedPokemon: observable,\r\n    filter: observable,\r\n\r\n    change_allPokemons: action,\r\n    change_selectedPokemon: action,\r\n    change_countPokemonOnPage: action,\r\n    change_clickedPage:action,\r\n    change_clickedPokemon: action,\r\n    get_allpokemons:action,\r\n    getPokemon: action,\r\n    addValuesToFilter: action,\r\n    refreshFilter: action\r\n});\r\n\r\nlet Pok = new Store();\r\n\r\nexport default Pok;\r\nexport {Store};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport FullPage from './App/Page';\r\nimport {Provider} from 'mobx-react';\r\nimport Store from './Store/storage';\r\n\r\nconst stor = { Store };\r\n\r\nReactDOM.render(\r\n    <Provider { ...stor }> \r\n        <FullPage />\r\n        {/* <div>Some text @</div> */}\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n)  "],"sourceRoot":""}