{"version":3,"sources":["App/Pokemon.jsx","App/Pagination.jsx","App/Filter.jsx","App/Page.jsx","Store/storage.jsx","index.js"],"names":["Pokemon","inject","observer","props","modalWindow","index","console","log","Store","change_clickedPokemon","document","getElementById","style","display","pokemonsOnPage","many_pokemons","Div","map","item","push","undefined","className","onClick","clickedPage","countPokemonOnPage","src","alt","convertToBlock","count","allPokemons","Pokemons","i","getPokemon","getManyPokemons","pokemon","clickedPokemon","id","base_stat","type","name","Pagination","changefunction","value","change_clickedPage","pagination1","many_pages","normalView","click","length","j","convertToNormalView","allPages","getAllPages","Filter","check","types","typesOfPokemons","div","for","checks","refreshFilter","arrChecked","checked","tempPokemons","tempPoke","isCorrect","tempType","f","change_allPokemons","useStyles","makeStyles","theme","body","background","pageElements","gridTemplateColumns","alignContent","textAlign","sizeBox","width","margin","outline","pageName","marginTop","marginBottom","fontSize","color","justButton","border","padding","searcher","borderRadius","paddingLeft","paddingTop","paddingBottom","buttons","gridTemplate","cursor","whiteSpace","Page","classes","sortFunction","a","b","refresheAll","get_allpokemons","onChange","size","change_countPokemonOnPage","target","placeholder","val","temp","require","result","filter","indexOf","toLowerCase","autocomplete","pokemons","sort","selectedPokemon","new_","this","new_count","num","decorate","observable","action","change_selectedPokemon","addValuesToFilter","stor","ReactDOM","render"],"mappings":"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","file":"static/js/main.70e4d23e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { inject, observer } from 'mobx-react';\r\nimport '../Style/Pokemon.css';\r\n\r\nlet Pokemon = inject('Store')(\r\n    observer(\r\n        // class PokeObject extends React.Component { \r\n        function PokeObject (props) {\r\n            const getManyPokemons = (count, clickedPage) => {\r\n                if (props.Store.allPokemons)\r\n                    console.log(clickedPage - 1);\r\n                let Pokemons = [];\r\n                for (let i = 0; i < count; i++) {\r\n                    Pokemons[i] = props.Store.getPokemon((((clickedPage - 1) * count) + i));\r\n                }\r\n                return Pokemons;\r\n            }\r\n            const convertToBlock = (many_pokemons) => {\r\n                let Div = [];\r\n                many_pokemons.map((item, index) => {\r\n                    Div.push(((item===0)||(item === undefined))?\"\":<div className='pokemon' onClick={() => modalWindow((props.Store.clickedPage - 1) * props.Store.countPokemonOnPage + index + 1)}>\r\n                        <img src={(item !== 0 && item !== undefined) ? item[0] : \"\"} alt=''/><br />\r\n                        <p>{(item !== 0 && item !== undefined) ? item[1] : \"\"}</p>\r\n                    </div>);\r\n                })\r\n                return Div;\r\n            }\r\n            const modalWindow = (index) => {\r\n                console.log(index);\r\n                props.Store.change_clickedPokemon(index);\r\n                document.getElementById('modalElem').style.display = 'block';\r\n                document.getElementById('poki').style.display='none';\r\n            }\r\n            // render() {\r\n                let pokemonsOnPage = convertToBlock(getManyPokemons(props.Store.countPokemonOnPage, props.Store.clickedPage));\r\n                let pokemon = props.Store.getPokemon(props.Store.clickedPokemon - 1);\r\n                return (\r\n                    <div>\r\n                        <div className='modalWindow modal' id='modalElem'>\r\n                            <div id=\"close-block\" onClick={() => { \r\n                                document.getElementById('modalElem').style.display = 'none';\r\n                                document.getElementById('poki').style.display = 'grid';\r\n                                }}>\r\n                                <span id=\"x\">X</span>\r\n                            </div>\r\n                            <div className='grid-container'>\r\n                                <div className='nameOfPokemon'>{(pokemon!==undefined)?pokemon[1]:\"\"}</div>\r\n                                <div className='photo'><img src={(pokemon!==undefined)?pokemon[0]:\"\"} alt=''/></div>\r\n                                <div className='stat'>Stat</div>\r\n                                <div className='speed'>Speed: {(pokemon!==undefined)?pokemon[2][0].base_stat:\"\"}</div>\r\n                                <div className='specialStats'>Special defense: {(pokemon!==undefined)?pokemon[2][1].base_stat:\"\"}<br />Special attack: {(pokemon!==undefined)?pokemon[2][2].base_stat:\"\"}</div>\r\n                                <div className='defenseAttack'>Defense: {(pokemon!==undefined)?pokemon[2][3].base_stat:\"\"}<br />Attack: {(pokemon!==undefined)?pokemon[2][4].base_stat:\"\"}</div>\r\n                                <div className='hp'>HP: {(pokemon!==undefined)?pokemon[2][5].base_stat:\"\"}</div>\r\n                                <div className='type1 typeOfPokemon' id={(pokemon!==undefined)?pokemon[3][0].type.name:\"\"}>{(pokemon!==undefined)?pokemon[3][0].type.name:\"\"}</div>\r\n                                <div className='type2 typeOfPokemon' id={(pokemon!==undefined)?((pokemon[3][1] === undefined) ? '' : pokemon[3][1].type.name):\"\"}>{(pokemon!==undefined)?((pokemon[3][1] === undefined) ? '' : pokemon[3][1].type.name):\"\"}</div>\r\n                                <div className='type3 typeOfPokemon' id={(pokemon!==undefined)?((pokemon[3][2] === undefined) ? '' : pokemon[3][2].type.name):\"\"}>{(pokemon!==undefined)?((pokemon[3][2] === undefined) ? '' : pokemon[3][2].type.name):\"\"}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='pokemon-list' id='poki'>{pokemonsOnPage}</div>\r\n                    </div>\r\n                );\r\n            // }\r\n        }\r\n    )\r\n)\r\n\r\nexport default Pokemon;","import React from 'react';\r\nimport {inject, observer} from 'mobx-react';\r\nimport '../Style/Pagination.css';\r\n\r\nlet Pagination = inject('Store')(\r\n    observer(\r\n        // class Pagination extends React.Component{\r\n        function Pagination(props){\r\n            const getAllPages = () =>{\r\n                let allPages = [];\r\n                for(let i = 1; i <= props.Store.allPokemons.length / props.Store.countPokemonOnPage; i++){\r\n                    allPages[i] = <div className='pagination-value' id={i} onClick =  {()=>changefunction(i)}>{i}</div>;\r\n                }\r\n                return allPages;\r\n            }\r\n            const changefunction = (value) =>{\r\n                console.log(value);\r\n                props.Store.change_clickedPage(value);\r\n            }\r\n            const convertToNormalView = (many_pages) =>{\r\n                let normalView = [];\r\n                let click = props.Store.clickedPage;\r\n                if(many_pages.length<=9){\r\n                    normalView = many_pages;\r\n                    normalView[click] = <div className='pagination-value clicked-page' id={click} onClick =  {()=>changefunction(click)}>{click}</div>;\r\n                }\r\n                else if(click < 6){\r\n                    for(let i = 1; i<=7; i++){\r\n                        normalView[i] = many_pages[i];\r\n                    }\r\n                    normalView[8] = <div className = 'dots'>...</div>\r\n                    normalView[9] = many_pages[many_pages.length-1];\r\n                    normalView[click] = <div className='pagination-value clicked-page' id={click} onClick =  {()=>changefunction(click)}>{click}</div>\r\n                }\r\n                else if(click > many_pages.length-4){\r\n                    normalView[1] = many_pages[1];\r\n                    normalView[2] = <div className = 'dots'>...</div>\r\n                    for(let i = 3, j = many_pages.length - 7; i<=9; i++, j++){\r\n                        normalView[i] = many_pages[j];\r\n                    }\r\n                    normalView[9-((many_pages.length-1) - click)] = <div className='pagination-value clicked-page' id={click} onClick =  {()=>changefunction(click)}>{click}</div>\r\n                }\r\n                else{\r\n                    normalView[1] = many_pages[1];\r\n                    normalView[2] = <div className = 'dots'>...</div>\r\n                    for(let i = 3, j = props.Store.clickedPage-2; i<=7; i++, j++){\r\n                        normalView[i] = many_pages[j];\r\n                    }\r\n                    normalView[8] = <div className = 'dots'>...</div>\r\n                    normalView[9] = many_pages[many_pages.length-1];\r\n                    normalView[5] = <div className='pagination-value clicked-page' id={click} onClick =  {()=>changefunction(click)}>{click}</div>\r\n                }\r\n                return normalView;\r\n            }\r\n            // render(){\r\n                let pagination1 = convertToNormalView(getAllPages());\r\n                return(\r\n                    <div className='pagination-main' id='pagination'>{pagination1}</div>\r\n                );\r\n            // }\r\n        }\r\n    )\r\n)\r\n\r\nexport default Pagination;","import React from 'react';\r\nimport {inject, observer} from 'mobx-react';\r\n\r\nimport '../Style/Filter.css';\r\n\r\nlet Filter = inject('Store')(\r\n    observer(\r\n        // class FilterButton extends React.Component{\r\n        function FilterButton(props){\r\n            const checks=()=>{\r\n                let types = props.Store.typesOfPokemons;\r\n                let div = [];\r\n                for(let i = 0; i<types.length; i++){\r\n                    div[i] = <div>\r\n                        <input type=\"checkbox\" value={types[i]} id={types[i]} className = 'pokemon-type-checkbox'/>\r\n                        <label for={types[i]}>{types[i]}</label> \r\n\r\n                    </div>\r\n                }\r\n                return div;\r\n            }\r\n\r\n            const filterPokemons=()=>{\r\n                document.getElementById('poki').style.display = \"grid\";\r\n                document.getElementById('pagination').style.display = \"grid\";\r\n                props.Store.refreshFilter();\r\n                let types = props.Store.typesOfPokemons;\r\n                let arrChecked = [];\r\n                for(let i = 0; i<types.length; i++){\r\n                    if(document.getElementById(types[i]).checked === true){\r\n                        // this.props.Store.addValuesToFilter(types[i]);\r\n                        arrChecked.push(types[i]);\r\n                    }\r\n                }\r\n                console.log(arrChecked);\r\n                document.getElementById('filter').style.display='none';\r\n\r\n                let tempPokemons = [];\r\n                for(let i = 0; i<props.Store.allPokemons.length; i++){\r\n                    \r\n                    let tempPoke = props.Store.allPokemons[i];\r\n                    let isCorrect = false;\r\n                    for(let j = 0; j<tempPoke[3].length; j++){\r\n                        let tempType = tempPoke[3][j].type.name;\r\n                        for(let f = 0; f<arrChecked.length; f++){\r\n                            let filtredType = arrChecked[f];\r\n                            // console.log(tempType+\"/\"+filtredType);\r\n                            if(tempType === filtredType){\r\n                                isCorrect = true;\r\n                            }\r\n                        }\r\n                    }\r\n                    if(isCorrect === true){\r\n                        tempPokemons.push(tempPoke);\r\n                    }\r\n                }\r\n                if(tempPokemons.length === 0){\r\n                    document.getElementById('poki').style.display = \"none\";\r\n                    document.getElementById('pagination').style.display = \"none\";\r\n                }\r\n                props.Store.change_allPokemons(tempPokemons);\r\n            }\r\n            // render(){\r\n                let check = checks();\r\n                return(\r\n                    <div className = 'filter-block'>\r\n                        <div className='modal-filter-window' id='filter'>\r\n                            <div id=\"close-block\" onClick={()=>{document.getElementById('filter').style.display='none'}}>\r\n                                <span id=\"x\">X</span>\r\n                            </div>\r\n                            <div className='many-checks'>\r\n                                {check}\r\n                            </div> \r\n                            <div className = 'filter-buttons'>\r\n                                <div className = 'button search' onClick={filterPokemons}>Search</div>\r\n                                <div className = 'button cancel' onClick={()=>{document.getElementById('filter').style.display='none'}}>Cancel</div>\r\n                            </div>\r\n                        </div>   \r\n                        <div className='filter' onClick = {()=>{document.getElementById('filter').style.display='block'}}>Filter</div>             \r\n                    </div>\r\n                );\r\n            // }\r\n        }\r\n    )\r\n)\r\n\r\nexport default Filter;","import React, { useState } from 'react';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {makeStyles} from '@material-ui/core/styles'\r\n\r\nimport PokemonFile from './Pokemon';\r\nimport Pagination from './Pagination';\r\nimport Filter from './Filter';\r\n\r\nimport '../Style/Page.css';\r\n\r\nconst useStyles = makeStyles(theme =>({\r\n    body: {\r\n        background: 'rgb(209, 209, 209)'\r\n    },\r\n    pageElements: {\r\n        display: 'grid',\r\n        gridTemplateColumns: '1fr',\r\n        alignContent: 'center',\r\n        textAlign: 'center'\r\n    },\r\n    sizeBox: {\r\n        width: '10vw',\r\n        margin: 'auto',\r\n        outline: 'none'\r\n    },\r\n    pageName: {\r\n        marginTop: '2vh',\r\n        marginBottom: '1vh',\r\n        fontSize: '40pt',\r\n        color: 'rgb(54, 54, 54)'\r\n    },\r\n    justButton: {\r\n        width: '70%',\r\n        margin: 'auto',\r\n        marginTop: '1vh',\r\n        border: '2px solid rgb(54, 54, 54)',\r\n        padding: '2px'\r\n    },\r\n    searcher: {\r\n        borderRadius: '20px',\r\n        outline: 'none',\r\n        width: '65%',\r\n        border: '3px solid grey',\r\n        paddingLeft: '5%',  \r\n        paddingTop: '2px',\r\n        paddingBottom: '2px' \r\n    },\r\n    buttons: {\r\n        display: 'grid',\r\n        width: '40vw',\r\n        gridTemplate: 'repeat(4, 1fr) / repeat(1, minmax(50px , 1fr))',\r\n        margin: 'auto',\r\n        border: 'none',\r\n        cursor: 'pointer',\r\n        whiteSpace: 'nowrap'\r\n    }\r\n}))\r\n\r\nlet Page = inject('Store')(\r\n    observer(\r\n        function Page(props){\r\n            const classes = useStyles();\r\n            const changeValue = (size) =>{\r\n                this.props.Store.change_countPokemonOnPage(size.target.value);\r\n                this.props.Store.change_clickedPage(1);\r\n            }\r\n            const sortPokemons = () =>{\r\n                let pokemons = props.Store.allPokemons;\r\n                console.log(pokemons);\r\n                pokemons = pokemons.sort(sortFunction);\r\n                props.Store.change_allPokemons(pokemons);\r\n                console.log(pokemons);\r\n                let temp = props.Store.countPokemonOnPage;\r\n                props.Store.change_countPokemonOnPage(20);\r\n                props.Store.change_countPokemonOnPage(temp);\r\n            }\r\n            const sortFunction = (a, b) =>{\r\n                if(a[1]>b[1]){\r\n                    return 1;\r\n                }\r\n                else if (a[1]<b[1]){\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            }\r\n            const refresheAll = () =>{\r\n                props.Store.get_allpokemons();\r\n                let types = props.Store.typesOfPokemons;\r\n                for(let i = 0; i<types.length; i++){\r\n                    document.getElementById(types[i]).checked = false;\r\n                }\r\n                document.getElementById('field').value = '';\r\n                props.Store.get_allpokemons();\r\n            }\r\n            const searchByValue = (val) =>{\r\n                document.getElementById('poki').style.display = \"grid\";\r\n                document.getElementById('pagination').style.display = \"grid\";\r\n                props.Store.change_clickedPage(1);\r\n                let temp = require('../Store/poke.json');\r\n                console.log(val.target.value.length);\r\n                if(val.target.value.length === 0){\r\n                    props.Store.get_allpokemons();\r\n                    return;\r\n                }\r\n                const result = temp.filter(pokemon => {if(pokemon[1].indexOf(val.target.value.toLowerCase())!==-1) return true; return false;});\r\n                if(result.length === 0){\r\n                    document.getElementById('poki').style.display = \"none\";\r\n                    document.getElementById('pagination').style.display = \"none\";\r\n                }\r\n                props.Store.change_allPokemons(result);\r\n            }\r\n            return (\r\n                <div className = {classes.pageElements}>\r\n                    <h1 className='page-name' onClick={refresheAll}>Pokedex</h1>\r\n                    <select className={classes.sizeBox} onChange = {changeValue}>\r\n                        <option value=\"10\">10</option>\r\n                        <option value=\"20\">20</option>\r\n                        <option value=\"50\">50</option>\r\n                    </select>\r\n                    <div className = {classes.buttons}>\r\n                        <input type = 'text' className = 'searcher justButton' id='field' name='q' placeholder=\"I will help you find\" onChange={searchByValue} autocomplete=\"off\"/>\r\n                        <div className='sort justButton' onClick = {sortPokemons}>Sort elements</div>\r\n                        <div className='refresh justButton' onClick={refresheAll}>Refresh</div>\r\n                        <Filter />\r\n                    </div>\r\n                    <PokemonFile />\r\n                    <Pagination />\r\n                </div>\r\n            );\r\n        }\r\n    )\r\n)\r\n\r\nexport default Page;","import { decorate, observable, action} from \"mobx\";\r\n\r\nclass Store{\r\n    allPokemons = require('./poke.json');\r\n    selectedPokemon = [];\r\n    countPokemonOnPage = 10;\r\n    clickedPage = 1;\r\n    clickedPokemon = 1;\r\n    typesOfPokemons = ['bug', 'dark', 'dragon', 'electric', 'fairy', 'fighting', 'fire', 'flying', 'ghosts',\r\n    'grass', 'ground', 'ice', 'normal', 'poison', 'psychic', 'rock', 'steel', 'water']\r\n    filter = [];\r\n\r\n    change_allPokemons(new_){\r\n        this.allPokemons = new_;\r\n    }\r\n    change_selectedPokemon(pokemon){\r\n        this.selectedPokemon = pokemon;\r\n    }\r\n    change_countPokemonOnPage(new_count){\r\n        this.countPokemonOnPage = new_count;\r\n    }\r\n    change_clickedPage(num){\r\n        this.clickedPage = num;\r\n    }\r\n    change_clickedPokemon(index){\r\n        this.clickedPokemon = index;\r\n    }\r\n\r\n    get_allpokemons(){\r\n        this.allPokemons = require('./poke.json');\r\n    }\r\n    getPokemon(num){\r\n        return this.allPokemons[num];\r\n    }\r\n\r\n    addValuesToFilter(value){\r\n        this.filter.push(value);\r\n    }\r\n    refreshFilter(){\r\n        this.filter = [];\r\n    }\r\n}\r\n\r\ndecorate(Store, {\r\n    allPokemons: observable,\r\n    selectedPokemon: observable,\r\n    countPokemonOnPage: observable,\r\n    clickedPage: observable,\r\n    clickedPokemon: observable,\r\n    filter: observable,\r\n\r\n    change_allPokemons: action,\r\n    change_selectedPokemon: action,\r\n    change_countPokemonOnPage: action,\r\n    change_clickedPage:action,\r\n    change_clickedPokemon: action,\r\n    get_allpokemons:action,\r\n    getPokemon: action,\r\n    addValuesToFilter: action,\r\n    refreshFilter: action\r\n});\r\n\r\nlet Pok = new Store();\r\n\r\nexport default Pok;\r\nexport {Store};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport FullPage from './App/Page';\r\nimport {Provider} from 'mobx-react';\r\nimport Store from './Store/storage';\r\n\r\nconst stor = { Store };\r\n\r\nReactDOM.render(\r\n    <Provider { ...stor }> \r\n        <FullPage />\r\n        {/* <div>Some text @</div> */}\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n)  "],"sourceRoot":""}